#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
##
# tag::appender[]
Appenders.0.type = JDBC
Appenders.0.name = JDBC
Appenders.0.tableName = logs
# <1>
Appenders.0.bufferSize = 10

# <2>
Appenders.0.ds.type = DataSource
Appenders.0.ds.jndiName = java:comp/env/jdbc/logging

# <3>
Appenders.0.col[0].type = ColumnMapping
Appenders.0.col[0].name = uuid
Appenders.0.col[0].pattern = %uuid{TIME}
Appenders.0.col[0].columnType = java.util.UUID

Appenders.0.col[1].type = ColumnMapping
Appenders.0.col[1].name = timestamp
Appenders.0.col[1].timestamp = java.util.Date

Appenders.0.col[2].type = ColumnMapping
Appenders.0.col[2].name = level
Appenders.0.col[2].pattern = %level

Appenders.0.col[3].type = ColumnMapping
Appenders.0.col[3].name = marker
Appenders.0.col[3].pattern = %marker

Appenders.0.col[4].type = ColumnMapping
Appenders.0.col[4].name = logger
Appenders.0.col[4].pattern = %logger

Appenders.0.col[5].type = ColumnMapping
Appenders.0.col[5].name = message
Appenders.0.col[5].pattern = %message

Appenders.0.col[6].type = ColumnMapping
Appenders.0.col[6].name = mdc
Appenders.0.col[6].columnType = org.apache.logging.log4j.spi.ThreadContextMap

Appenders.0.col[7].type = ColumnMapping
Appenders.0.col[7].name = ndc
Appenders.0.col[7].columnType = org.apache.logging.log4j.spi.ThreadContextStack
# end::appender[]

Loggers.Root.level = INFO
Loggers.Root.AppenderRef.ref= JDBC
